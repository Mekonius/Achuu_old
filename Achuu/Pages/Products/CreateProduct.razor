@page "/products/create"
@using Achuu.Models;
@using Achuu.Models.Services;
@using Achuu.Pages.Products

@inject ProductService productService

@code {
    public Product newProduct = new Product();

    // This method will be called on form submission
    public async Task CreateNewProduct()
    {
        // Call the CreateProductAsync method from the ProductService to save the new product
        await productService.CreateProductAsync(newProduct);

        // Reset the newProduct variable for a new entry
        newProduct = new Product();
    }
}


<h3>Create</h3>

<EditForm Model="newProduct" OnValidSubmit="CreateNewProduct">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="Brand">Brand</label>
        <InputText id="Brand" class="form-control" @bind-Value="newProduct.Brand" />
    </div>

    <div class="form-group">
        <label for="Name">Name</label>
        <InputText id="Name" class="form-control" @bind-Value="newProduct.Name" />
    </div>

    <div class="form-group">
        <label for="Price">Price</label>
        <InputText id="Price" class="form-control" @bind-Value="newProduct.Price" />
    </div>

    <div class="form-group">
        <label for="Image_link">Image Link</label>
        <InputFile id="Image_link" class="form-control" @bind-Value="newProduct.Image_link" />
    </div>

    <div class="form-group">
        <label for="Description">Description</label>
        <InputText id="Description" class="form-control" @bind-Value="newProduct.Description" />
    </div>

    <!-- Add other fields as needed -->

    <div class="form-group">
        <!-- Use EventCallback to wrap the CreateNewProduct method -->
        <button type="submit" class="btn btn-primary" @onclick="EventCallback.Factory.Create(this, CreateNewProduct)">Create</button>
    </div>
</EditForm>




